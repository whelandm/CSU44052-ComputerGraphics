#version 330

precision mediump float; 
varying vec3 normalInterp;
varying vec3 vertPos;

const vec3 lightPos = vec3(1.0, 3.0, 1.0);
const vec3 ambientColor = vec3(0.01, 0.01, 0.01);
const vec3 diffuseColor = vec3(0.01, 0.01, 0.01);
const vec3 specColor = vec3(1.0, 1.0, 1.0);
const vec3 fogColor = vec3(0.5, 0.5, 0.5);

in vec2 TexCoord;
in float visibility;

uniform sampler2D ourTexture;

void main() {
  vec3 bump =  2.0 * texture(ourTexture, TexCoord).rgb - 1.0;
  vec3 normal = normalize(normalInterp + bump);

  vec3 lightDir = normalize(lightPos);
  float lambertian = max(dot(lightDir,normal), 0.0);
  float specular = 0.0;
  
  if(lambertian > 0.0) {
    vec3 viewDir = normalize(-vertPos);
    vec3 halfDir = normalize(lightDir + viewDir);
    float specAngle = max(dot(halfDir, normal), 0.0);
    specular = pow(specAngle, 16.0);
  }

  vec4 color = texture(ourTexture, TexCoord) * vec4(ambientColor + lambertian * diffuseColor + specular * specColor, 1.0);
  gl_FragColor =  mix(vec4(fogColor,1.0), color, visibility);
}  