#version 330

in vec3 vertex_position;
in vec3 vertex_normal;
in vec2 vertex_texture;

uniform mat4 proj, view, model;

varying vec3 normalInterp;
varying vec3 vertPos;

out vec2 TexCoord;
out float visibility;

const float density = 0.07;
const float gradient = 1.5;

void main(){
	mat4 ModelViewMatrix = view * model;
	mat3 NormalMatrix =  mat3(ModelViewMatrix);
    gl_Position = proj * view * model * vec4(vertex_position, 1.0);
	vec4 positionToCam =  ModelViewMatrix * vec4(vertex_position, 1.0);
	float distance = length(positionToCam.xyz);
	visibility = exp(-pow(distance*density, gradient));
    vec4 vertPos4 = view * vec4(vertex_position, 1.0);
    vertPos = vec3(vertPos4)/vertPos4.w;
    normalInterp = NormalMatrix * vertex_normal;
	TexCoord = vertex_texture;
}
    